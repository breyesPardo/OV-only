function enviarOrdenesRetenidasPorZona() {
  try {
    Logger.log("üöÄ Iniciando env√≠o de √≥rdenes retenidas por zona...");

    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const hojaOrdenes = ss.getSheetByName("OrdenesRetenidas");

    if (!hojaOrdenes) {
      Logger.log("‚ùå La hoja 'OrdenesRetenidas' no existe.");
      return;
    }

    const encabezados = hojaOrdenes.getRange(1, 1, 1, hojaOrdenes.getLastColumn()).getValues()[0];
    const datos = hojaOrdenes.getRange(2, 1, hojaOrdenes.getLastRow() - 1, hojaOrdenes.getLastColumn()).getValues();

    const index = {
      orden: encabezados.indexOf("OrderNum"),
      fecha: encabezados.indexOf("Fecha"),
      zona: encabezados.indexOf("Zona"),
      cliente: encabezados.indexOf("Cliente"),
      estado: encabezados.indexOf("Estado"),
      motivo: encabezados.indexOf("Motivo Retenci√≥n"),
      observaciones: encabezados.indexOf("Observaciones Retenci√≥n")
    };

    const zonaANumero = {
      "Zona1Cundinamarca-Boyac√°-Santa": "3182260739",
      "Zona2-Cundinamarca": "3182260739",
      "Zona3-Boyac√°": "3182260739",
      "Zona4-Santander-Cesar": "3182260739",
      "Zona5-Norte de Santander": "3182260739",
      "Zona6-Suroeste Antioque√±o": "3182260739",
      "Zona7-Oriente y Nte Antioqu√≠a": "3182260739",
      "Zona8-Meta": "3182260739",
      "Zona9-Casanar√©": "3182260739",
      "Zona10-Tolima Centro - Norte": "3182260739",
      "Zona11-Tolima Sur y Oriente": "3182260739",
      "Zona12-Huila Norte": "3182260739",
      "Zona14-HuilaCentroSur-Caquet√°": "3182260739",
      "Zona15-Cauca": "3182260739",
      "Zona16-Nari√±o": "3182260739",
      "Zona17-Valle": "3182260739",
      "Zona18-Eje Cafetero": "3182260739",
      "Zona19 Palma": "3182260739",
      "Zona20 Urab√°": "3182260739",
      "Zona21 Ca√±a": "3182260739",
      "Zona23 - Caribe seco": "3182260739",
      "Zona25 Flores": "3182260739",
      "Ecuador": "3182260739",
      "Licitaciones Colinagro": "3182260739",
      "Bolivia": "3182260739",
      "Gerencia General": "3182260739"
    };

    const zonaANombre = {
      "Zona1Cundinamarca-Boyac√°-Santa": "Juan Camilo Gil Orjuela",
      "Zona2-Cundinamarca": "Sergio Andres Rojas Sanchez",
      "Zona3-Boyac√°": "Yury Fonseca Patarroyo",
      "Zona4-Santander-Cesar": "Oscar Fernando Chingate Cruz",
      "Zona5-Norte de Santander": "Freddy Andres Bastianelli Fontana",
      "Zona6-Suroeste Antioque√±o": "Carlos Andres Arboleda Tabares",
      "Zona7-Oriente y Nte Antioqu√≠a": "Rafael Leonardo Pe√±a Sarmiento",
      "Zona8-Meta": "Ximena Nathalia Nu√±ez Cruz",
      "Zona9-Casanar√©": "Angel Alonso Vasquez Morales",
      "Zona10-Tolima Centro - Norte": "Assad Fraija Lopera",
      "Zona11-Tolima Sur y Oriente": "Edna Liliana Portillo",
      "Zona12-Huila Norte": "Domingo Jose Soto Martinez",
      "Zona14-HuilaCentroSur-Caquet√°": "Ivan Dario Lopez Rubio",
      "Zona15-Cauca": "Claudia Patricia Ussa",
      "Zona16-Nari√±o": "Carlos Alberto Castillo √ëa√±ez",
      "Zona17-Valle": "Diego Herney Guisa Velasquez",
      "Zona18-Eje Cafetero": "Juan Pablo Londo√±o Aristizabal",
      "Zona19 Palma": "Juan Pablo Carranza",
      "Zona20 Urab√°": "Gadelia Gliseth Gomez Gomez",
      "Zona21 Ca√±a": "Juan Pablo Carranza",
      "Zona23 - Caribe seco": "Sandra Judith Castillo",
      "Zona25 Flores": "Javier Leonardo Erazo Velandia",
      "Ecuador": "Sandra Valverde",
      "Licitaciones Colinagro": "Sandra Valverde",
      "Bolivia": "Representante sin asignar",
      "Gerencia General": "Representante sin asignar"
    };

    const url = "https://go.botmaker.com/api/v1.0/intent/v2";
    const token = "eyJhbGciOiJIUzUxMiJ9.eyJidXNpbmVzc0lkIjoiY29saW5hZ3JvIiwibmFtZSI6IkJSQU5ET04gWUVTSUQgUkVZRVMgUEFSRE8iLCJhcGkiOnRydWUsImlkIjoiVmU5bWNWWVdKb2VEa1I1WHFUZzhGMkNlRmxXMiIsImV4cCI6MTkwMTIwODAzOCwianRpIjoiVmU5bWNWWVdKb2VEa1I1WHFUZzhGMkNlRmxXMiJ9.IyxhZ-wETqd70EatU9kpVpZCq6dEbywtd9_kkTjRMzo5A99lIGq9CNT0KTUKOE5Xg25D8o33pGkuWwgOWXDAlQ";
    const chatChannelNumber = "573142340715";

    const agrupadoPorZona = {};

    datos.forEach(fila => {
      const orden = fila[index.orden];
      const fechaRaw = fila[index.fecha];
      const fecha = Utilities.formatDate(new Date(fechaRaw), Session.getScriptTimeZone(), "dd/MM/yyyy");
      const zona = fila[index.zona];
      const cliente = fila[index.cliente];
      const observaciones = fila[index.observaciones];

      if (!zona || !orden) return;

      if (!agrupadoPorZona[zona]) {
        agrupadoPorZona[zona] = {
          ordenesTexto: [],
          observacionesTexto: new Set(),
          clientesSet: new Set()
        };
      }

      agrupadoPorZona[zona].ordenesTexto.push(`üîπ *Orden:* ${orden} - ${fecha}`);
      agrupadoPorZona[zona].observacionesTexto.add(`üìù ${orden}: ${observaciones || "Sin observaci√≥n"}`);
      agrupadoPorZona[zona].clientesSet.add(cliente);
    });

    Object.keys(agrupadoPorZona).forEach((zona, idx) => {
      const numeroDestino = zonaANumero[zona] || "3182260739";
      const nombreRepresentante = zonaANombre[zona] || "Representante sin asignar";
      const telefono = numeroDestino.startsWith("57") ? numeroDestino : "57" + numeroDestino;
      const fechaReporte = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "dd/MM/yyyy HH:mm:ss");

      const data = agrupadoPorZona[zona];
      const ordenes = data.ordenesTexto.join("\n");
      const observaciones = Array.from(data.observacionesTexto).join("\n");
      const clientes = Array.from(data.clientesSet);
      const primerCliente = clientes.length === 1 ? clientes[0] : "VARIOS CLIENTES";

      const params = {
        "1": fechaReporte,
        "2": nombreRepresentante,
        "3": zona,
        "4": primerCliente,
        "5": ordenes,
        "6": observaciones
      };

      const payload = {
        chatPlatform: "whatsapp",
        chatChannelNumber: chatChannelNumber,
        platformContactId: telefono,
        ruleNameOrId: "reporte_ordenes_retenidas",
        params: params,
        clientPayload: `ordenesretenidas_${zona.replace(/\s+/g, "_")}_${new Date().getTime()}`
      };

      const options = {
        method: "post",
        contentType: "application/json",
        payload: JSON.stringify(payload),
        headers: { "access-token": token },
        muteHttpExceptions: true
      };

      try {
        const response = UrlFetchApp.fetch(url, options);
        Logger.log(`‚úÖ [${idx + 1}] Enviado a ${zona} (${nombreRepresentante}) ‚Üí ${telefono}`);
      } catch (error) {
        Logger.log(`‚ùå Error al enviar a zona ${zona}: ${error.message}`);
      }
    });

    Logger.log("‚úÖ Finalizado env√≠o de √≥rdenes retenidas.");
  } catch (error) {
    Logger.log("‚ùå Error general: " + error.message);
  }
}
